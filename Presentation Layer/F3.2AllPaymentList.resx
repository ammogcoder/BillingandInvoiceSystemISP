<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="BBackManagePayment12.Iconimage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>